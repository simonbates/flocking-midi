/*
 * Flocking MIDI Demos: Ports View
 * http://github.com/colinbdclark/flocking-midi
 *
 * Copyright 2016, Colin Clark
 * Licensed under the MIT license.
 */

"use strict";

fluid.defaults("flock.midi.demos.portsView", {
    gradeNames: "fluid.viewComponent",

    modelListeners: {
        inputs: {
            excludeSource: "init",
            funcName: "flock.midi.demos.portsView.renderPorts",
            args: [
                "{that}.model.inputs",
                "{that}.dom.inputs",
                "{that}"
            ]
        },

        outputs: {
            excludeSource: "init",
            funcName: "flock.midi.demos.portsView.renderPorts",
            args: [
                "{that}.model.outputs",
                "{that}.dom.outputs",
                "{that}"
            ]
        }
    },

    markup: {
        table: "<table class='flc-midi-portsView'><thead><tr><th>ID</th><th>Name</th><th>State</th><th>Status</th></tr></thead></table>",
        inputs: "<tbody class='flc-midi-portsView-inputs'><tr><td colspan=4>%inputsTitle</td></tr></tbody>",
        outputs: "<tbody class='flc-midi-portsView-outputs'><tr><td colspan=4>%outputsTitle</td></tr></tbody>",
        port: "<tr id='%id' class=flc-midi-portsView-port><td>%id</td><td class='fl-midi-portsView-name'>%manufacturer %name</td><td>%state</td><td>%connection</td></tr>"
    },

    strings: {
        inputsTitle: "Inputs",
        outputsTitle: "Outputs"
    },

    selectors: {
        portsTable: ".flc-midi-portsView",
        inputs: ".flc-midi-portsView-inputs",
        outputs: ".flc-midi-portsView-outputs",
        ports: ".flc-midi-portsView-port",
        inputPorts: ".flc-midi-portsView-inputs .flc-midi-portsView-port",
        outputPorts: ".flc-midi-portsView-outputs .flc-midi-portsView-port",
    },

    listeners: {
        "onCreate.renderPortsTable": {
            funcName: "flock.midi.demos.portsView.renderPortsTable",
            args: ["{that}.container", "{that}.options"]
        }
    }
});

flock.midi.demos.portsView.renderTableGroup = function (type, table, options) {
    var rendered = fluid.stringTemplate(options.markup[type], options.strings);
    table.append(rendered);
};

flock.midi.demos.portsView.renderPortsTable = function (container, options) {
    var table = $(options.markup.table);

    flock.midi.demos.portsView.renderTableGroup("inputs", table, options);
    flock.midi.demos.portsView.renderTableGroup("outputs", table, options);
    container.append(table);
};

flock.midi.demos.portsView.renderPort = function (port, portsGroup, portMarkup) {
    var rendered = fluid.stringTemplate(portMarkup, port);
    portsGroup.append(rendered);
};

flock.midi.demos.portsView.renderPorts = function (ports, portsGroup, that) {
    // TODO: Poor use of DOM Binder.
    portsGroup.children(that.options.selectors.ports).remove();

    fluid.each(ports, function (port) {
        flock.midi.demos.portsView.renderPort(port, portsGroup,
            that.options.markup.port);
    });
};
