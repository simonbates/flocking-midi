/*
 * Flocking MIDI Core Access
 * http://github.com/colinbdclark/flocking-midi
 *
 * Copyright 2014-2016, Colin Clark
 * Licensed under the MIT license.
 */

"use strict";

var fluid = fluid || require("infusion");

fluid.defaults("flock.midi.port", {
    gradeNames: "fluid.modelComponent",

    members: {
        port: "fluid.mustBeOverridden" // User-supplied {MIDIPort} object
    },

    model: {
        state: "closed",
        connection: "closed",
        id: "",
        manufacturer: ""
    },

    invokers: {
        open: {
            "this": "{that}.port",
            method: "open"
        },

        close: {
            "this": "{that}.port",
            method: "close"
        }
    },

    events: {
        onStateChange: null
    },

    listeners: {
        // TODO: Wire up onStateChange to port.onstatechange
        // when it's clear what the spec is actually saying.
        "onDestroy.close": "{that}.close()"
    }
});

fluid.defaults("flock.midi.inputPort", {
    gradeNames: ["flock.midi.port", "flock.midi.receiver"]
});

fluid.defaults("flock.midi.outputPort", {
    gradeNames: ["flock.midi.port", "flock.midi.sender"]
});
