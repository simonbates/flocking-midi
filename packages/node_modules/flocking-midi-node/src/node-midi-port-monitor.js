/*
 * Flocking MIDI Node.js Port Monitor
 * http://github.com/colinbdclark/flocking-midi
 *
 * Copyright 2016, Colin Clark
 * Licensed under the MIT license.
 */

"use strict";

var fluid = fluid || require("infusion"),
    berg = require("bergson"),
    flock = fluid.registerNamespace("flock");

fluid.defaults("flock.midi.nodejs.portMonitor", {
    gradeNames: "fluid.modelComponent",

    // TODO: Modelize this once Bergson supports it.
    pollRate: 1, // seconds

    model: {
        isActive: false
    },

    components: {
        clock: {
            type: "flock.midi.nodejs.portMonitorClock",
            options: {
                freq: "{portMonitor}.options.pollRate"
            }
        }
    },

    modelListeners: {
        isActive: {
            funcName: "flock.midi.nodejs.portMonitor.toggleClock",
            args: ["{change}.value", "{that}.clock"]
        }
    }
});

flock.midi.nodejs.portMonitor.toggleClock = function (isActive, clock) {
    if (isActive) {
        clock.start();
    } else {
        clock.stop();
    }
};


fluid.defaults("flock.midi.nodejs.portMonitorClock", {
    gradeNames: "berg.clock.setInterval",

    listeners: {
        "onTick.refreshPorts": "{system}.refreshPorts()"
    }
});
