/*
 * Flocking Node.js MIDI Access
 * http://github.com/colinbdclark/flocking-midi
 *
 * Copyright 2014-2016, Colin Clark
 * Licensed under the MIT license.
 */

"use strict";

var fluid = fluid || require("infusion"),
    flock = fluid.registerNamespace("flock"),
    midi = require("midi");

fluid.defaults("flock.midi.nodejs.access", {
    gradeNames: "flock.midi.access",

    members: {
        input: "@expand:flock.midi.nodejs.access.createNodeMIDIPort(input)",
        output: "@expand:flock.midi.nodejs.access.createNodeMIDIPort(output)"
    },

    invokers: {
        requestAccess: {
            func: "{that}.events.onAccessRequested.fire"
        }
    },

    listeners: {
        "onCreate.setFilters": {
            funcName: "flock.midi.nodejs.access.setFilters",
            args: ["{that}.input", "{that}.options.sysex"]
        },

        "onAccessRequested.grantAccess": {
            func: "{that}.events.afterAccessGranted.fire"
        },

        "onDestroy.releasePorts": [
            {
                "this": "{that}.input",
                method: "release"
            },
            {
                "this": "{that}.output",
                method: "release"
            }
        ]
    }
});

flock.midi.nodejs.access.createNodeMIDIPort = function (type) {
    return new midi[type]();
};

flock.midi.nodejs.access.setFilters = function (nodeMIDIPort, sysex) {
    nodeMIDIPort.ignoreTypes(!sysex, false, false);
};
